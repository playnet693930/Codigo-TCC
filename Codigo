Dockerfile: Dackerfile
FROM node:14
WORKDIR /app
COPY package.json./
RUN npm install
COPY
EXPOSE 3000
CMD ["node", "app.js"]


Script Terraform para EKS: hcl
provider "aws" (
region "us-west-2"
}
resource "aws_eks_cluster" "example" (


name
"example-cluster*
role_arn aws_lan_role.example.arn
vpc_config {
subnet idsaws subnet.example[*].id
resource "aws_eks_node_group" "example" (
cluster name aws_eks_cluster.example.name
"example-nodes" node_group_name
- aws_iam_role.example.arn node_role_arn
=aws_subnet.example[*].id subnet_ids
scaling config [
desired size 3
max size 3
min_size

name:
CI/CD Pipeline
on: [push]
jobs:
build:
runs-on: ubuntu-latest
steps:
name: Checkout code
uses:
actions/checkout@v2


name:
Set up Docker Buildx
uses: docker/setup-buildx-action@vi
name: Build and push Docker image
uses: docker/build-push-action@v2
with:
context:.
push: true
tags: user/app:latest


name:
Deploy to Kubernetes
uses:
azure/k8s-deploy@v1
with:
action: deploy
manifests:
./kss/deployment.yaml
./k8s/service.yaml
